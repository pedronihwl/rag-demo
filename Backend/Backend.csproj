<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <SpaRoot>.\Client\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <ItemGroup>
      <Content Include="..\.dockerignore">
        <Link>.dockerignore</Link>
      </Content>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="AspNetCore.Proxy" Version="4.5.0" />
        <PackageReference Include="NetEscapades.AspNetCore.SecurityHeaders" Version="0.18.0" />
        <PackageReference Include="Azure.Identity" />
        <PackageReference Include="Azure.Storage.Blobs"/>
        <PackageReference Include="Microsoft.Azure.Cosmos"/>
        <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Shared\Shared.csproj" />
    </ItemGroup>

    <ItemGroup>
        <Content Remove="$(SpaRoot)**" />
        <Content Include="..\.dockerignore">
            <Link>.dockerignore</Link>
        </Content>
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
    </Target>

    <ItemGroup>
        <SupportedPlatform Include="browser" />
    </ItemGroup>

</Project>
